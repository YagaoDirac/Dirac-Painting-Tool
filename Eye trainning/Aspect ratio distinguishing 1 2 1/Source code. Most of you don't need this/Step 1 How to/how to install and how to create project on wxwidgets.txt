First, this video is very helpful.

https://www.youtube.com/watch?v=EI2taYkErRg

Get into the root folder where you unzipped the wxWidgets files. Inside /build/msw/ (I'm on Microsoft Windows, choose yours if different), find the .sln file. Open it with visual studio 2017(I think 2015 and 2019 would work as well). Build all the 4 sets of properties. All the 4! It shouldn't take long. After building, you'll get some new files. Some of them are needed when you set up new projects.
/build/msw/里面找sln，找到最新的，用2017（2019应该也可以）打开。把4个配置都在win32下编译，包括debug，release，和2个dll。

Create a new project.
新建一个空白工程。

Add or create a .cpp file. This file doesn't have to do anything but to be a .cpp file. Or else you are not allowed to set up the properties for the new project.
随便加一个什么cpp文件进去，不然c/c++整个一个条目都找不到

project>>>properties

c/c++ >>> Additional Include Directories.
For debug:
debug的版本是:
D:\wxWidgets 3.1.4\wxWidgets-3.1.4\include
D:\wxWidgets 3.1.4\wxWidgets-3.1.4\lib\vc_dll\mswud
2 items.
两条。
For release:
release的是:
D:\wxWidgets 3.1.4\wxWidgets-3.1.4\include
D:\wxWidgets 3.1.4\wxWidgets-3.1.4\lib\vc_dll\mswu
Without he last d character at the end.
也就是最后少了一个d字。
If you can't find the second directory, you haven't correctly build all the 4 properties mentioned before.
第二个目录是要编译wx的源码才有。

Notice. A setup.h file is inside include/msvs. It's not used when setup the properties.It's not used.It's not used.It's not used. If you get any error info says that a setup.h file is missing, it's not this one.
这个地方要注意，有一个文件夹是include/msvs里面有一个setup.h，反正至少这个地方不用(不用不用不用，说3编)这个文件。

Add WXUSINGDLL inside c/c++ >>> Preprocessor Definitions
c/c++ >>> Preprocessor Definitions。加一句，WXUSINGDLL。

Linker >>> Additional Library Directories
Add \lib\vc_dll
加一句wx根目录\lib\vc_dll
If you can't find this directory, you haven't correctly build all the 4 properties mentioned before.
这个目录是要编译wx的源码才有，包括之前的additional include directories里面的第二个，也是，要编译了才有。

Linker >>> Input >>> Additional Dependencies
Add 2 items.
加2个东西
For debug, the names contain an extra d character compare with the release version.
debug版本加d，就是
wxbase31ud.lib
wxmsw31ud_core.lib
release版本是
wxbase31u.lib
wxmsw31u_core.lib

If you still encounter any "unresolved external symbol" LNK 2019 or anything in the same pattern, open the docs of wxWidgets, find the function, find its class, within the page, there is always a line indicates which module the function or the class is in. Add the name inside this additional dependencies. That would always work.
如果还有unresolved external symbol,那就只有从wxwidgets的文档里面看那个类属于那个模块。类似的格式。反正这些lib都是可以在wxwidgets的安装目录里面找到的。

Inside wxWidgets, msw means Microsoft Windows. Some of the features are slightly different on different platforms. Btw, a category is about the cross-platform you might get inside the docs.
msw是microsoft windows 的意思。根据自己的平台去找。另外就是文档里面会有一个跨平台的注意事项。

At last. The video seems not has mentioned a very important detail, remember to modify the Subsystem from Console to Windows inside Linker>>>System右边Subsystem. Or you are gonna get an issue says the main16@ what cannot be found.
最后，视频上没提的一个东西，很重要。
Linker>>>System右边Subsystem，改成Windows。不然找不到main。


Thanks for your time. 
Have a nice day.

Dirac